import { Google } from '@mui/icons-material'
import { Box, Button, Card, Checkbox, Divider, FormControl, FormHelperText, FormLabel, LinearProgress, TextField, Typography } from '@mui/material'
import Head from 'next/head'
import Link from 'next/link'
import React, { useState } from 'react'
import { useForm } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup"
import * as yup from "yup"


const formSchema = yup.object().shape({
    firstName: yup.string().min(2, "Min 2 characters").max(32, "Max 32 characters").required(),
    lastName: yup.string().min(2, "Min 2 characters").max(32, "Max 32 characters").required(),
    email: yup.string().required(),
    phone: yup.string().required(),
    password: yup.string().required(),
    confirmPassword: yup.string().required()
})

export default function Signup() {
    const [isLoading, setIsLoading] = useState(false)

    const { handleSubmit, register, formState: { errors } } = useForm({
        defaultValues: {
            firstName: "",
            lastName: "",
            email: "",
            phone: "",
            password: "",
            confirmPassword: "",
        },
        mode: "onChange",
        reValidateMode: "onChange",
        resolver: yupResolver(formSchema)
    });

    async function onSubmit(values: any) {
        setIsLoading(true)
        console.log(values)
        const {firstName, lastName, email, password, phone, id} = values
        const data = {
            first_name: firstName,
            last_name: lastName,
            email,
            password,
            phone_number: phone,
            national_id: id || "2235ciy909",
        }

        try {
            const res = await fetch('/api/auth/signup',{
                method: 'POST',
                headers:{
                    'Content-Type':'application/json'
                },
                body: JSON.stringify({...data})
            })
            const response = await res.json();
            console.log(response)
            setIsLoading(false)
        } catch(error) {
            setIsLoading(false)
            console.log(error)
        }

    }

    return (
        <>
            <Head>
                <title>Rentals</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main style={{ width: "100vw", minHeight: "100vh" }}>
                <Box
                    width="100vw"
                    minHeight={"100vh"}
                    sx={{
                        bgcolor: "primary.light",
                    }}
                    display="flex"
                    justifyContent={"center"}
                    alignItems={"center"}
                    overflow="scroll"
                >
                    <Card
                        sx={{
                            bgcolor: "white",
                            width: ["90vw", "30rem"],
                            padding: "1rem",
                            display: "flex",
                            gap: "2rem",
                            flexDirection: "column",
                            my: "auto"
                        }}
                    >
                        {/* <LinearProgress sx={{display: isLoading ? "flex" : "none"}} /> */}
                        <Typography color="primary.dark" mx="auto">Rentals</Typography>
                        <Box display="flex" flexDirection="column">
                        <Typography color="primary.dark" mx="auto" fontSize="1.5rem" fontWeight="600">Sign Up</Typography>
                        <Typography color="primary.dark" mx="auto" textAlign="center">Enter your credentials to continue</Typography>
                        </Box>
                        <form id="signup-form" onSubmit={handleSubmit(onSubmit)}>
                            <Box width="100%" display="flex" flexDirection="column" gap="1rem">
                                <Box display="grid" gridTemplateColumns="1fr 1fr" gap="1rem">
                                    <FormControl>
                                        <TextField
                                            variant="outlined"
                                            placeholder="First Name"
                                            label="First Name"
                                            {...register("firstName")}
                                        />
                                        <FormHelperText>{errors?.firstName?.message}</FormHelperText>
                                    </FormControl>
                                    <FormControl>
                                        <TextField
                                            variant="outlined"
                                            placeholder="Last Name"
                                            label="Last Name"
                                            {...register("lastName")}
                                        />
                                        <FormHelperText>{errors?.lastName?.message}</FormHelperText>
                                    </FormControl>
                                </Box>
                                <FormControl>
                                    <TextField
                                        variant="outlined"
                                        {...register("email")}
                                        placeholder="Email"
                                        label="Email"
                                        sx={{
                                            width: "100%"
                                        }}
                                    />
                                    <FormHelperText>{errors?.email?.message}</FormHelperText>
                                </FormControl>
                                <FormControl>
                                    <TextField
                                        variant="outlined"
                                        {...register("phone")}
                                        placeholder="Phone"
                                        label="Phone"
                                        sx={{
                                            width: "100%"
                                        }}
                                    />
                                    <FormHelperText>{errors?.phone?.message}</FormHelperText>
                                </FormControl>
                                <FormControl>
                                    <TextField
                                        variant="outlined"
                                        {...register("password")}
                                        placeholder="Password"
                                        label="Password"
                                        sx={{
                                            width: "100%"
                                        }}
                                    />
                                    <FormHelperText>{errors?.password?.message}</FormHelperText>
                                </FormControl>
                                <FormControl>
                                    <TextField
                                        variant="outlined"
                                        {...register("confirmPassword")}
                                        placeholder="Confirm Password"
                                        label="Confirm Password"
                                        sx={{
                                            width: "100%"
                                        }}
                                    />
                                    <FormHelperText>{errors?.confirmPassword?.message}</FormHelperText>
                                </FormControl>
                            </Box>
                        </form>
                        <Button disabled={isLoading} variant="contained" sx={{ padding: "1rem" }} type="submit" form="signup-form">Login</Button>
                        <Divider orientation="horizontal" />
                        <Link href="/" style={{ marginRight: "auto", marginLeft: "auto" }}><Typography>Don't have an account?</Typography></Link>
                    </Card>
                </Box>
            </main>
        </>
    )
}